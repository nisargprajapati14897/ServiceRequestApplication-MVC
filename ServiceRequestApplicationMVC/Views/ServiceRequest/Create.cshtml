@model ServiceRequestApplicationMVC.Models.ServiceRequest

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@*@Scripts.Render("~/Scripts/Themes/ckeditor_full/ckeditor.js")*@
@*<script src="~/Scripts/Themes/ckeditor_full/ckeditor.js"></script>*@
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" />
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
<script type="text/javascript">
    function functionConfirm(event) {
        swal({
            title: 'are you sur?',
            text: "You will not be able to recover this item",
            type: 'warning',
            showCancelButton: true,
            cancelButtonText: 'No',
            cancelButtonClass: 'btn btn-danger',
            showConfirmButton: true,
            confirmButtonText: 'Yes',
            confirmButtonClass: 'btn btn-success'
        }, function (isConfirm) {
            if (isConfirm) {
                $('form').submit();
                return true;
            } else {
                return false;
            }
        });
        return false;
    }
</script>
<script src="~/Scripts/Themes/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/Themes/ckeditor/adapters/jquery.js"></script>


@using (Html.BeginForm("Create", "ServiceRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add ServiceRequest</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.EnquiryPurpose, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("EnquiryPurpose", @ViewBag.EnquiryPurpose as List<SelectListItem>, "--- Select ---", new { @class = "form-control btn-secondary" })
                    @Html.ValidationMessageFor(model => model.EnquiryPurpose, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.EnquiryPurpose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.EnquiryPurpose, new { htmlAttributes = new { @class = "form-control" } })*@
                Interview
                @Html.RadioButtonFor(model => model.EnquiryPurpose, "Interview", new { @class = "form-check" })
                Cariour
                @Html.RadioButtonFor(model => model.EnquiryPurpose, "Cariour", new { @class = "form-check" })
                @Html.ValidationMessageFor(model => model.EnquiryPurpose, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--<div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">-->
        @*@Html.TextAreaFor(model => model.Comments, new { @class = "ckeditor", placeholder = "Content" })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })*@
        <!--<span>Select File </span>
        <input type="file" name="postedFile"  />
        <hr />-->
        @*<input type="submit" value="Upload" />*@
        <!--<br />
                <br />
                if (ViewBag.ImageUrl != null)
                {
                <img alt="Uploaded Image" src="@ViewBag.ImageUrl" />
                }
            </div>
        </div>-->

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comments, new { @class = "ckeditor", placeholder = "Content" })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-success btn-large" })
</div>
